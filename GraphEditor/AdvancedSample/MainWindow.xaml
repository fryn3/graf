<Window
    x:Class="SampleCode.MainWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:NetworkModel="clr-namespace:NetworkModel;assembly=NetworkModel"
    xmlns:NetworkUI="clr-namespace:NetworkUI;assembly=NetworkUI"
    xmlns:ZoomAndPan="clr-namespace:ZoomAndPan;assembly=ZoomAndPan"
    xmlns:ac="clr-namespace:AdornedControl;assembly=AdornedControl"
    xmlns:diagnostics="clr-namespace:System.Diagnostics;assembly=WindowsBase"
    xmlns:local="clr-namespace:SampleCode"
    x:Name="mainWindow"
    Title="Редактор графов"
    Width="800"
    Height="500"
    MinWidth="400"
    MinHeight="150"
    FocusManager.FocusedElement="{Binding ElementName=networkControl}"
    Loaded="MainWindow_Loaded">

    <!--
        Including this in binding statements for diagnostics:
        diagnostics:PresentationTraceSources.TraceLevel=High
    -->

    <Window.Resources>

        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <!--
                    Merge in the resource dictionary that is shared between the main window and the overview window.
                -->
                <ResourceDictionary Source="SharedVisualTemplates.xaml" />

            </ResourceDictionary.MergedDictionaries>

            <!--  Menu commands.  -->

            <RoutedUICommand x:Key="Commands.NewNetwork" />
            <RoutedUICommand x:Key="Commands.SaveNetwork" />
            <RoutedUICommand x:Key="Commands.SaveAsNetwork" />
            <RoutedUICommand x:Key="Commands.OpenNetwork" />
            <RoutedUICommand x:Key="Commands.ShowAbout" />
            <RoutedUICommand x:Key="Commands.ShowTable" />
            <RoutedUICommand x:Key="Commands.Exit" />

            <!--  UI commands.  -->

            <RoutedUICommand x:Key="Commands.CreateConnection" />
            <RoutedUICommand x:Key="Commands.CompareNetwork" />
            <RoutedUICommand x:Key="Commands.DeleteSelectedNodes" />
            <RoutedUICommand x:Key="Commands.CreateNode" />
            <RoutedUICommand x:Key="Commands.CreateNodeAtCenter" />
            <RoutedUICommand x:Key="Commands.DeleteNode" />
            <RoutedUICommand x:Key="Commands.DeleteConnection" />
            <RoutedUICommand x:Key="Commands.ZoomOut" />
            <RoutedUICommand x:Key="Commands.ZoomIn" />
            <RoutedUICommand x:Key="Commands.JumpBackToPrevZoom" />
            <RoutedUICommand x:Key="Commands.FitContent" />
            <RoutedUICommand x:Key="Commands.Fill" />
            <RoutedUICommand x:Key="Commands.OneHundredPercent" />

            <local:NetworkTypeToVisibilityConverter x:Key="NetworkTypeToVisibilityConverter" />

            <!--
                This converts from a scale value to a percentage value.
                It is used to convert the value of 'ContentScale' to the percentage zoom level that is displayed in the UI.
            -->
            <local:ScaleToPercentConverter x:Key="scaleToPercentConverter" />

            <CollectionViewSource x:Key="possibleStatesViewSource" Source="{Binding PossibleStates}" />

            <CollectionViewSource x:Key="possibleInputsViewSource" Source="{Binding PossibleInputs}" />

            <CollectionViewSource x:Key="possibleOutputsViewSource" Source="{Binding PossibleOutputs}" />

            <!--
                This graphic is used to indicate that a connection cannot be made between two particular connectors.
            -->
            <DataTemplate DataType="{x:Type local:ConnectionBadIndicator}">
                <Grid Width="80">
                    <Image
                        Width="32"
                        Height="32"
                        HorizontalAlignment="Right"
                        Source="Resources/block_16.png" />
                </Grid>
            </DataTemplate>

            <!--
                This graphic is used to indicate that a connection can be made between two particular connectors.
            -->
            <DataTemplate DataType="{x:Type local:ConnectionOkIndicator}">
                <Grid Width="80">
                    <Image
                        Width="32"
                        Height="32"
                        HorizontalAlignment="Right"
                        Source="Resources/tick_16.png" />
                </Grid>
            </DataTemplate>

            <!--
                Define the visual style for a 'ConnectorItem'.
            -->
            <Style TargetType="{x:Type NetworkUI:ConnectorItem}">
                <!--
                    Data-binding for the connector hotspot.
                    ConnectorItem automatically computes its center points and assings this value
                    to the 'Hotspot' property.  This data-binding then 'pushes' the value into the application
                    view-model.
                -->
                <Setter Property="Hotspot" Value="{Binding Hotspot, Mode=OneWayToSource}" />

                <!--  The visual template.  -->
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type NetworkUI:ConnectorItem}">
                            <!--  The visual for the connector.  -->
                            <!--
                            <Ellipse Fill="{StaticResource connectorBackgroundBrush}" Stroke="{StaticResource nodeBorderBrush}" />
                            -->
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!--
                Template for the button that is used to delete nodes and connections in the graph.
                This button is displayed in an adorner when the user hovers the mouse over a node or connection.
            -->
            <ControlTemplate x:Key="deleteButtonTemplate" TargetType="{x:Type Button}">
                <Grid x:Name="grid">
                    <Grid.RenderTransform>
                        <ScaleTransform
                            CenterX="10"
                            CenterY="10"
                            ScaleX="1"
                            ScaleY="1" />
                    </Grid.RenderTransform>
                    <Ellipse
                        x:Name="shadow"
                        HorizontalAlignment="Stretch"
                        VerticalAlignment="Stretch"
                        Fill="Gray">
                        <Ellipse.RenderTransform>
                            <TranslateTransform X="1.5" Y="1.5" />
                        </Ellipse.RenderTransform>
                    </Ellipse>
                    <Ellipse
                        x:Name="ellipse"
                        HorizontalAlignment="Stretch"
                        VerticalAlignment="Stretch"
                        Fill="White"
                        Stroke="Black" />
                    <Image Margin="2" Source="Resources\scissors.png" />
                </Grid>
                <ControlTemplate.Triggers>
                    <EventTrigger RoutedEvent="Mouse.MouseEnter">
                        <!--
                            Make the 'delete connection button' larger when the mouse
                            cursor is hovered over it.
                        -->
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation
                                    Storyboard.TargetName="grid"
                                    Storyboard.TargetProperty="RenderTransform.ScaleX"
                                    To="1.3"
                                    Duration="0:0:0.25" />
                                <DoubleAnimation
                                    Storyboard.TargetName="grid"
                                    Storyboard.TargetProperty="RenderTransform.ScaleY"
                                    To="1.3"
                                    Duration="0:0:0.25" />
                            </Storyboard>
                        </BeginStoryboard>
                    </EventTrigger>

                    <EventTrigger RoutedEvent="Mouse.MouseLeave">
                        <!--
                            Return the 'delete connection button' to normal size when the mouse
                            cursor is moved away.
                        -->
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation
                                    Storyboard.TargetName="grid"
                                    Storyboard.TargetProperty="RenderTransform.ScaleX"
                                    To="1"
                                    Duration="0:0:0.05" />
                                <DoubleAnimation
                                    Storyboard.TargetName="grid"
                                    Storyboard.TargetProperty="RenderTransform.ScaleY"
                                    To="1"
                                    Duration="0:0:0.05" />
                            </Storyboard>
                        </BeginStoryboard>
                    </EventTrigger>
                </ControlTemplate.Triggers>

            </ControlTemplate>

            <!--
                Data-template for ConectionViewModel.
                
                Note that the 'Start' and 'End' of the arrow are bound to 'SourceConnectorHotspot' and 'DestConnectorHotspot' in
                the view-model.
                
                In this sample a curved arrow represents connections between nodes.
            -->
            <DataTemplate DataType="{x:Type NetworkModel:ConnectionViewModel}">

                <!--
                    An adorned control is used, to represent the connection.
                    When the user hovers the mouse cursor over the connection, the
                    'delete connection' adorner pops up and allows them to delete the connection.
                -->
                <ac:AdornedControl
                    HorizontalAdornerPlacement="Mouse"
                    IsMouseOverShowEnabled="{Binding ElementName=networkControl, Path=IsNotDragging}"
                    VerticalAdornerPlacement="Mouse">

                    <Grid>

                        <!--  The connection is represented by a curved arrow.  -->
                        <local:CurvedArrow
                            Fill="{StaticResource connectionBrush}"
                            Points="{Binding Points}"
                            Stroke="{StaticResource connectionBrush}"
                            StrokeThickness="1" />

                        <Canvas Width="2000" Height="2000">

                            <StackPanel
                                Canvas.Left="{Binding LabelPoint.Left}"
                                Canvas.Top="{Binding LabelPoint.Top}"
                                Canvas.Right="{Binding LabelPoint.Right}"
                                Canvas.Bottom="{Binding LabelPoint.Bottom}"
                                Orientation="Horizontal">

                                <ComboBox
                                    IsSynchronizedWithCurrentItem="False"
                                    ItemsSource="{Binding Source={StaticResource possibleInputsViewSource}}"
                                    SelectedValue="{Binding Input, Mode=TwoWay}"
                                    Style="{StaticResource networkComboBoxStyle}" />

                                <TextBlock Visibility="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}, Path=ViewModel.Network.Type, Converter={StaticResource NetworkTypeToVisibilityConverter}, ConverterParameter=Connection}">/</TextBlock>

                                <ComboBox
                                    IsSynchronizedWithCurrentItem="False"
                                    ItemsSource="{Binding Source={StaticResource possibleOutputsViewSource}}"
                                    SelectedValue="{Binding Output, Mode=TwoWay}"
                                    Style="{StaticResource networkComboBoxStyle}"
                                    Visibility="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}, Path=ViewModel.Network.Type, Converter={StaticResource NetworkTypeToVisibilityConverter}, ConverterParameter=Connection}" />

                            </StackPanel>

                        </Canvas>

                    </Grid>

                    <ac:AdornedControl.AdornerContent>

                        <!--
                            This is the adorner that pops up when the user hovers the mouse over the connection.
                            It displays a button that the user can click to delete the connection.
                        -->
                        <Canvas
                            x:Name="connectionAdornerCanvas"
                            Width="30"
                            Height="30"
                            HorizontalAlignment="Right"
                            VerticalAlignment="Top">
                            <Line
                                Stroke="Black"
                                StrokeThickness="1"
                                X1="0"
                                X2="15"
                                Y1="30"
                                Y2="15" />
                            <Button
                                x:Name="deleteConnectionButton"
                                Canvas.Left="10"
                                Canvas.Top="0"
                                Width="20"
                                Height="20"
                                Command="{StaticResource Commands.DeleteConnection}"
                                CommandParameter="{Binding}"
                                Cursor="Hand"
                                Focusable="False"
                                Template="{StaticResource deleteButtonTemplate}" />
                        </Canvas>
                    </ac:AdornedControl.AdornerContent>
                </ac:AdornedControl>
            </DataTemplate>

            <!--  Define a data-template for the 'NodeViewModel' class.  -->
            <DataTemplate DataType="{x:Type NetworkModel:NodeViewModel}">

                <!--
                    An adorned control is used, to represent the node.
                    When the user hovers the mouse cursor over the node, the
                    'delete node' adorner pops up and allows them to delete the node.
                -->
                <ac:AdornedControl
                    AdornerOffsetX="-12"
                    AdornerOffsetY="8"
                    HorizontalAdornerPlacement="Outside"
                    IsMouseOverShowEnabled="{Binding ElementName=networkControl, Path=IsNotDragging}"
                    VerticalAdornerPlacement="Outside">

                    <!--  The margin has been selected so that the selection rect nicely covers the entire node.  -->

                    <Grid Margin="10,6" SizeChanged="Node_SizeChanged">

                        <Grid.RowDefinitions>
                            <RowDefinition Height="*" />
                            <RowDefinition Height="1*" />
                        </Grid.RowDefinitions>
                        <!--  This rectangle is the main visual for the node.  -->

                        <ComboBox
                            Grid.Row="0"
                            Height="20"
                            Margin="0,0,0,8"
                            IsSynchronizedWithCurrentItem="False"
                            ItemsSource="{Binding Source={StaticResource possibleOutputsViewSource}}"
                            SelectedItem="{Binding Output, Mode=TwoWay}"
                            Style="{StaticResource networkComboBoxStyle}"
                            Visibility="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}, Path=ViewModel.Network.Type, Converter={StaticResource NetworkTypeToVisibilityConverter}, ConverterParameter=Node}" />


                        <Ellipse
                            Grid.Row="1"
                            Width="50"
                            Height="50"
                            Fill="{StaticResource nodeFillBrush}"
                            Stroke="{StaticResource nodeBorderBrush}"
                            StrokeThickness="1" />

                        <!--  The name of the node.  -->
                        <Border
                            Grid.Row="1"
                            Width="50"
                            Height="50">

                            <ComboBox
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                IsSynchronizedWithCurrentItem="False"
                                ItemsSource="{Binding Source={StaticResource possibleStatesViewSource}}"
                                SelectedValue="{Binding Name, Mode=TwoWay}"
                                Style="{StaticResource networkComboBoxStyle}" />

                        </Border>

                        <Grid Grid.Row="1" Margin="-7.5">

                            <!--  Displays the node's input connectors.  -->
                            <ItemsControl
                                Grid.Row="0"
                                Grid.Column="0"
                                Focusable="False"
                                ItemTemplate="{StaticResource inputConnectorTemplate}"
                                ItemsSource="{Binding InputConnectors}">
                                <ItemsControl.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <Grid />
                                    </ItemsPanelTemplate>
                                </ItemsControl.ItemsPanel>
                            </ItemsControl>

                            <!--  Displays the node's output connectors.  -->
                            <ItemsControl
                                Grid.Row="0"
                                Grid.Column="0"
                                Focusable="False"
                                ItemTemplate="{StaticResource outputConnectorTemplate}"
                                ItemsSource="{Binding OutputConnectors}">
                                <ItemsControl.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <Grid />
                                    </ItemsPanelTemplate>
                                </ItemsControl.ItemsPanel>
                            </ItemsControl>

                        </Grid>

                    </Grid>

                    <ac:AdornedControl.AdornerContent>

                        <!--
                            This is the adorner that pops up when the user hovers the mouse over the node.
                            It displays a button that the user can click to delete the node.
                        -->
                        <Canvas
                            x:Name="nodeAdornerCanvas"
                            Width="30"
                            Height="30"
                            HorizontalAlignment="Right"
                            VerticalAlignment="Top">
                            <Line
                                Stroke="Black"
                                StrokeThickness="1"
                                X1="-5"
                                X2="15"
                                Y1="35"
                                Y2="15" />
                            <Button
                                x:Name="deleteNodeButton"
                                Canvas.Left="10"
                                Canvas.Top="0"
                                Width="20"
                                Height="20"
                                Command="{StaticResource Commands.DeleteNode}"
                                CommandParameter="{Binding}"
                                Cursor="Hand"
                                Focusable="False"
                                Template="{StaticResource deleteButtonTemplate}" />
                        </Canvas>
                    </ac:AdornedControl.AdornerContent>
                </ac:AdornedControl>
            </DataTemplate>

        </ResourceDictionary>

    </Window.Resources>

    <Window.InputBindings>

        <!--  Bind input to commands.  -->

        <KeyBinding
            Key="N"
            Command="{StaticResource Commands.NewNetwork}"
            Modifiers="Control" />
        <KeyBinding
            Key="O"
            Command="{StaticResource Commands.OpenNetwork}"
            Modifiers="Control" />
        <KeyBinding
            Key="S"
            Command="{StaticResource Commands.SaveNetwork}"
            Modifiers="Control" />
        <KeyBinding
            Key="E"
            Command="{StaticResource Commands.Exit}"
            Modifiers="Control" />

        <KeyBinding Key="Delete" Command="{StaticResource Commands.DeleteSelectedNodes}" />
        <KeyBinding Key="Minus" Command="{StaticResource Commands.ZoomOut}" />
        <KeyBinding Key="Plus" Command="{StaticResource Commands.ZoomIn}" />
        <KeyBinding Key="Back" Command="{StaticResource Commands.JumpBackToPrevZoom}" />
        <KeyBinding Key="Space" Command="{StaticResource Commands.FitContent}" />

    </Window.InputBindings>

    <Window.CommandBindings>

        <!--  Bind commands to event handlers.  -->

        <CommandBinding Command="{StaticResource Commands.NewNetwork}" Executed="NewNetwork_Executed" />
        <CommandBinding
            CanExecute="SaveNetwork_CanExecute"
            Command="{StaticResource Commands.SaveNetwork}"
            Executed="SaveNetwork_Executed" />
        <CommandBinding
            CanExecute="SaveNetwork_CanExecute"
            Command="{StaticResource Commands.SaveAsNetwork}"
            Executed="SaveAsNetwork_Executed" />
        <CommandBinding Command="{StaticResource Commands.OpenNetwork}" Executed="OpenNetwork_Executed" />
        <CommandBinding Command="{StaticResource Commands.ShowAbout}" Executed="ShowAbout_Executed" />
        <CommandBinding Command="{StaticResource Commands.ShowTable}" Executed="ShowTable_Executed" />
        <CommandBinding Command="{StaticResource Commands.Exit}" Executed="Exit_Executed" />

        <CommandBinding Command="{StaticResource Commands.DeleteSelectedNodes}" Executed="DeleteSelectedNodes_Executed" />
        <CommandBinding Command="{StaticResource Commands.CreateConnection}" Executed="CreateConnection_Executed" />
        <CommandBinding Command="{StaticResource Commands.CompareNetwork}" Executed="CompareNetwork_Executed" />
        <CommandBinding Command="{StaticResource Commands.CreateNode}" Executed="CreateNode_Executed" />
        <CommandBinding Command="{StaticResource Commands.CreateNodeAtCenter}" Executed="CreateNodeAtCenter_Executed" />
        <CommandBinding Command="{StaticResource Commands.DeleteNode}" Executed="DeleteNode_Executed" />
        <CommandBinding Command="{StaticResource Commands.DeleteConnection}" Executed="DeleteConnection_Executed" />
        <CommandBinding Command="{StaticResource Commands.ZoomOut}" Executed="ZoomOut_Executed" />
        <CommandBinding Command="{StaticResource Commands.ZoomIn}" Executed="ZoomIn_Executed" />
        <CommandBinding
            CanExecute="JumpBackToPrevZoom_CanExecuted"
            Command="{StaticResource Commands.JumpBackToPrevZoom}"
            Executed="JumpBackToPrevZoom_Executed" />
        <CommandBinding Command="{StaticResource Commands.FitContent}" Executed="FitContent_Executed" />
        <CommandBinding Command="{StaticResource Commands.Fill}" Executed="Fill_Executed" />
        <CommandBinding Command="{StaticResource Commands.OneHundredPercent}" Executed="OneHundredPercent_Executed" />

    </Window.CommandBindings>

    <Window.ContextMenu>

        <ContextMenu>

            <!--  Clicking this menu item creates a new node.  -->

            <MenuItem
                Command="{StaticResource Commands.CreateNode}"
                Header="Добавить состояние"
                ToolTip="Создать новое состояние" />

            <Separator />

            <MenuItem
                Command="{StaticResource Commands.FitContent}"
                Header="Подогнать"
                ToolTip="Изменить масштаб таким образом, что бы отобразить все состояния в окне" />
            <MenuItem
                Command="{StaticResource Commands.Fill}"
                Header="Заполнить"
                ToolTip="Показать окно целиком" />
            <MenuItem
                Command="{StaticResource Commands.OneHundredPercent}"
                Header="100%"
                ToolTip="Установить масштаб на 100%" />
            <MenuItem
                Command="{StaticResource Commands.JumpBackToPrevZoom}"
                Header="Предыдущий масштаб"
                ToolTip="Установить масштаб, который был ранее" />

            <Separator />

            <MenuItem
                Command="{StaticResource Commands.ZoomOut}"
                Header="Отдалить"
                ToolTip="Уменьшить масштаб окна" />
            <MenuItem
                Command="{StaticResource Commands.ZoomIn}"
                Header="Приблизить"
                ToolTip="Увеличить масштаб окна" />

        </ContextMenu>
    </Window.ContextMenu>

    <Window.DataContext>
        <local:MainWindowViewModel />
    </Window.DataContext>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="457*" />
        </Grid.RowDefinitions>

        <Menu
            Grid.Row="0"
            Grid.Column="0"
            Background="#FFF0F0F0">
            <MenuItem Header="Файл">
                <MenuItem
                    Command="{StaticResource Commands.NewNetwork}"
                    Header="Новая задача"
                    InputGestureText="Ctrl+N" />
                <MenuItem Command="{StaticResource Commands.CompareNetwork}" Header="Проверить задачу" />
                <Separator />
                <MenuItem
                    Command="{StaticResource Commands.OpenNetwork}"
                    Header="Открыть файл"
                    InputGestureText="Ctrl+O" />
                <MenuItem
                    Command="{StaticResource Commands.SaveNetwork}"
                    Header="Сохранить файл"
                    InputGestureText="Ctrl+S" />
                <MenuItem Command="{StaticResource Commands.SaveAsNetwork}" Header="Сохранить как ..." />
                <Separator />
                <MenuItem
                    Command="{StaticResource Commands.Exit}"
                    Header="Выход"
                    InputGestureText="Ctrl+E" />
            </MenuItem>
            <MenuItem Header="Справка">
                <MenuItem Command="{StaticResource Commands.ShowTable}" Header="Показать таблицу" />
                <MenuItem Command="{StaticResource Commands.ShowAbout}" Header="О программе" />
            </MenuItem>
        </Menu>

        <DockPanel
            Grid.Row="1"
            Grid.Column="0"
            Panel.ZIndex="1">

            <Button
                Height="53"
                Margin="5"
                Padding="12,0"
                HorizontalAlignment="Left"
                VerticalAlignment="Top"
                Background="#FFF0F0F0"
                Command="{StaticResource Commands.CreateNodeAtCenter}">
                <DockPanel>
                    <Ellipse
                        Width="16"
                        Height="16"
                        Margin="0,2,8,2"
                        Fill="{StaticResource nodeFillBrush}"
                        Stroke="{StaticResource nodeBorderBrush}" />
                    <TextBlock VerticalAlignment="Center" TextAlignment="Center">
                        Добавить
                        <LineBreak />
                        состояние
                    </TextBlock>
                </DockPanel>
            </Button>

            <Button
                Height="53"
                Margin="5"
                Padding="12,0"
                HorizontalAlignment="Left"
                VerticalAlignment="Top"
                Background="#FFF0F0F0"
                Command="{StaticResource Commands.CreateConnection}">
                <DockPanel>
                    <Image
                        Width="16"
                        Height="16"
                        Margin="0,2,8,2"
                        Source="Resources\striped-curve-arrow.png" />
                    <TextBlock VerticalAlignment="Center" TextAlignment="Center">
                        Добавить
                        <LineBreak />
                        переход
                    </TextBlock>
                </DockPanel>
            </Button>

            <Button
                Height="53"
                Margin="5"
                Padding="12,0"
                HorizontalAlignment="Left"
                VerticalAlignment="Top"
                Background="#FFF0F0F0"
                Command="{StaticResource Commands.CompareNetwork}">
                <DockPanel>
                    <Image
                        Width="16"
                        Height="16"
                        Margin="0,2,8,2"
                        Source="Resources\checkmark.png" />
                    <TextBlock VerticalAlignment="Center" TextAlignment="Center">
                        Проверить
                        <LineBreak />
                        решение
                    </TextBlock>
                </DockPanel>
            </Button>

        </DockPanel>

        <DockPanel Grid.Row="1" Grid.Column="0">

            <!--  Grid placed below the zoom and pan control that contains the zoom slider, zoom label and some buttons.  -->

            <Grid Margin="5,5,5,5" DockPanel.Dock="Bottom">
                <Grid.ColumnDefinitions>

                    <!--  empty space  -->
                    <ColumnDefinition Width="*" />

                    <!--  the fit content button  -->
                    <ColumnDefinition Width="70" />

                    <!--  spacer  -->
                    <ColumnDefinition Width="5" />

                    <!--  the fill button  -->
                    <ColumnDefinition Width="65" />

                    <!--  spacer  -->
                    <ColumnDefinition Width="5" />

                    <!--  the 100% button  -->
                    <ColumnDefinition Width="40" />

                    <!--  spacer  -->
                    <ColumnDefinition Width="5" />

                    <!--  the zoom percentage label  -->
                    <ColumnDefinition Width="25" />

                    <!--  the % symbol  -->
                    <ColumnDefinition Width="15" />

                    <!--  spacer  -->
                    <ColumnDefinition Width="5" />

                    <!--  the zoom out button  -->
                    <ColumnDefinition Width="20" />

                    <!--  spacer  -->
                    <ColumnDefinition Width="5" />

                    <!--  the zoom slider  -->
                    <ColumnDefinition Width="120" />

                    <!--  spacer  -->
                    <ColumnDefinition Width="5" />

                    <!--  the zoom in button  -->
                    <ColumnDefinition Width="20" />

                    <!--  spacer  -->
                    <ColumnDefinition Width="5" />

                    <!--  resize grip  -->
                    <ColumnDefinition Width="25" />

                </Grid.ColumnDefinitions>

                <!--
                    The 'fit content' button.  Causes the content to be scaled so that all the graph nodes fit in the viewport.
                -->
                <Button
                    Grid.Column="1"
                    Command="{StaticResource Commands.FitContent}"
                    ToolTip="Отобразить все состояния в окне">
                    Подогнать
                </Button>

                <!--
                    The fill button.  Causes the content to be scaled so that it fits in the viewport.
                -->
                <Button
                    Grid.Column="3"
                    Command="{StaticResource Commands.Fill}"
                    ToolTip="Показать окно целиком">
                    Заполнить
                </Button>

                <!--
                    The 100% button.  Causes the content to be scaled to 100 percent.
                -->
                <Button
                    Grid.Column="5"
                    Command="{StaticResource Commands.OneHundredPercent}"
                    ToolTip="Установить масштаб на 100%">
                    100%
                </Button>

                <!--
                    This is the label that shows what the current zoom level
                    is while zooming in and out.
                -->
                <TextBlock
                    Grid.Column="7"
                    HorizontalAlignment="Right"
                    VerticalAlignment="Center"
                    Text="{Binding ElementName=zoomAndPanControl, Path=ContentScale, Converter={StaticResource scaleToPercentConverter}}" />

                <TextBlock
                    Grid.Column="8"
                    VerticalAlignment="Center"
                    Text="%" />

                <!--  Button to zoom out.  -->
                <Button
                    Grid.Column="10"
                    Command="{StaticResource Commands.ZoomOut}"
                    ToolTip="Уменьшить масштаб">
                    -
                </Button>

                <!--  Slider to change the current zoom level.  -->
                <Slider
                    Grid.Column="12"
                    LargeChange="20"
                    Maximum="200"
                    Minimum="10"
                    SmallChange="10"
                    TickFrequency="10"
                    TickPlacement="TopLeft"
                    ToolTip="Change the zoom level of the content"
                    Value="{Binding ElementName=zoomAndPanControl, Path=ContentScale, Converter={StaticResource scaleToPercentConverter}}" />

                <!--
                    Button to zoom in.
                -->
                <Button
                    Grid.Column="14"
                    Command="{StaticResource Commands.ZoomIn}"
                    ToolTip="Увеличить масштаб">
                    +
                </Button>

                <!--  Stick a resize grip in the bottom right corner of the window.  -->
                <ResizeGrip Grid.Column="16" />

            </Grid>

            <!--
                The ScrollViewer displays scrollbars when the content is too big to fit in the viewport.
                Focusable is set to False because it is only that NetworkView that I want to be focusable.
            -->
            <ScrollViewer
                CanContentScroll="True"
                Focusable="False"
                HorizontalScrollBarVisibility="Visible"
                VerticalScrollBarVisibility="Visible">

                <!--
                    The ZoomAndPanControl displays the NetworkView as its content.
                    We can use the mouse to zoom and pan about the NetworkView.
                -->
                <ZoomAndPan:ZoomAndPanControl
                    x:Name="zoomAndPanControl"
                    Background="LightGray"
                    ContentOffsetX="{Binding ContentOffsetX, Mode=TwoWay}"
                    ContentOffsetY="{Binding ContentOffsetY, Mode=TwoWay}"
                    ContentScale="{Binding ContentScale, Mode=TwoWay}"
                    ContentViewportHeight="{Binding ContentViewportHeight, Mode=OneWayToSource}"
                    ContentViewportWidth="{Binding ContentViewportWidth, Mode=OneWayToSource}"
                    Focusable="False">
                    <!--
                        We need to nest our NetworkView in an AdornerDecorator so that adorners work correct when
                        we zoom in and out using the ZoomAndPanControl
                    -->
                    <AdornerDecorator>
                        <!--
                            This grid specifies the size of the ZoomAndPanControl's content.
                            It wraps up both the NetworkView and drag-zooming Canvas.
                        -->
                        <Grid Width="{Binding ContentWidth}" Height="{Binding ContentHeight}">

                            <!--  In this sample the NetworkView is the content displayed by the ZoomAndPanControl.  -->

                            <NetworkUI:NetworkView
                                x:Name="networkControl"
                                ConnectionDragCompleted="networkControl_ConnectionDragCompleted"
                                ConnectionDragStarted="networkControl_ConnectionDragStarted"
                                ConnectionDragging="networkControl_ConnectionDragging"
                                ConnectionsSource="{Binding Path=Network.Connections}"
                                MouseDown="networkControl_MouseDown"
                                MouseMove="networkControl_MouseMove"
                                MouseUp="networkControl_MouseUp"
                                MouseWheel="networkControl_MouseWheel"
                                NodesSource="{Binding Network.Nodes}"
                                QueryConnectionFeedback="networkControl_QueryConnectionFeedback"
                                SelectionChanged="networkControl_OnSelectionChanged" />

                            <!--
                                This Canvas and Border are used as a very simple way to render a drag rectangle that the user
                                uses to specify an area to zoom in on.
                            -->
                            <Canvas x:Name="dragZoomCanvas" Visibility="Collapsed">
                                <Border
                                    x:Name="dragZoomBorder"
                                    Background="Silver"
                                    BorderBrush="Black"
                                    BorderThickness="1"
                                    CornerRadius="1"
                                    Opacity="0" />
                            </Canvas>

                        </Grid>
                    </AdornerDecorator>
                </ZoomAndPan:ZoomAndPanControl>
            </ScrollViewer>

        </DockPanel>

    </Grid>

</Window>
